name: Build

on:
  push:
    branches:
      - '**'
    paths:
      - WSL2-Linux-Kernel

  workflow_dispatch:
    inputs:
      git_version:
        description: 'Kernel tag to build (e.g., v6.6.87.2)'
        required: false
        default: ''

jobs:

  Build:
    runs-on: ubuntu-latest

    env:
      # All of these will be set dynamically in a later step
      UID:
      GID:
      GIT_VERSION:
      KERNEL_VERSION:

    defaults:
      run:
        working-directory: ${{ github.workspace }}/WSL2-Linux-Kernel

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    # Necessary for git describe. This takes some time, but we want to make sure
    # to have the correct version baked into the kernel image in the end.
    # v5.4-rc8 is the tag right before v5.4, which is the start for our bisect.
    - name: Fetch history up to tag "v5.4-rc8"
      run: git fetch --shallow-exclude=v5.4-rc8

    - name: Get kernel config
      run: cp Microsoft/config-wsl .config

    - name: Get version
      run: git describe --tags

    # These are needed to be passed to the docker container, so that "git describe"
    # does not complain about dubious ownership during kernel build.
    - name: Determine UID and GID
      run: |
        echo "UID=$(id -u ${USER})" >> $GITHUB_ENV
        echo "GID=$(id -g ${USER})" >> $GITHUB_ENV

    - name: Apply custom patches & config
      run: |
        cd WSL2-Linux-Kernel
        # Use the latest tag (e.g., 6.6.x) based on trigger
        git fetch --tags
        # If a specific git version is provided, use that; otherwise, use the latest tag
        if [ "${{ github.event.inputs.git_version }}" != "" ]; then
          git checkout "${{ github.event.inputs.git_version }}"
        else
          git checkout "$(git describe --tags --abbrev=0)"
        fi
        # Attempt to revert; if it conflicts, automatically pick HEAD version
        git revert -m1 dce7cd62754b5 --no-edit || (git diff --name-only --diff-filter=U | xargs git checkout --ours && git add . && git commit --no-edit)
        scripts/config --enable ISO9660_FS
        scripts/config --enable USBIP_CORE
        scripts/config --enable VHCI_HCD

    - name: Build kernel
      uses: addnab/docker-run-action@v3
      with:
        image: baldk/wsl-kernel-build:ubuntu24.04
        options: |
          -v ${{ github.workspace }}:/src
          -u ${{env.UID}}:${{env.GID}}
          --hostname wsl-kernel-build
        run: bash -c "make -j 32 -C WSL2-Linux-Kernel CONFIG_LOCALVERSION_AUTO=y KCONFIG_CONFIG=.config"

    - name: Get kernel version
      run: |
        KERNEL_VERSION=$(make kernelrelease)
        echo "KERNEL_VERSION=${KERNEL_VERSION}" >> $GITHUB_ENV

    - name: Get git version
      run: echo "GIT_VERSION=$(git describe --tags)" >> $GITHUB_ENV

    - name: Put kernel version into filename
      run: mv arch/x86/boot/bzImage bzImage-${{env.KERNEL_VERSION}}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bzImage-${{env.KERNEL_VERSION}}
        path: |
          WSL2-Linux-Kernel/bzImage-${{env.KERNEL_VERSION}}

    - name: Publish release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{env.GIT_VERSION}}
        files: WSL2-Linux-Kernel/bzImage-${{env.KERNEL_VERSION}}
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
